<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" hreflang="en" /><updated>2021-11-09T23:17:44+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Hauling-IT</title><subtitle>Hydejack is a boutique Jekyll theme for hackers, nerds, and academics, with a focus on personal sites that are meant to impress.
</subtitle><author><name>Jinho Kim</name><email>haul0215@gmail.com</email></author><entry><title type="html">자바 ORM 표준 JPA 프로그래밍</title><link href="http://localhost:4000/blog/update/computer-science/jpa/2021-11-09-jpa-basic-1/" rel="alternate" type="text/html" title="자바 ORM 표준 JPA 프로그래밍" /><published>2021-11-09T00:00:00+09:00</published><updated>2021-11-09T00:00:00+09:00</updated><id>http://localhost:4000/blog/update/computer-science/jpa/jpa-basic-1</id><content type="html" xml:base="http://localhost:4000/blog/update/computer-science/jpa/2021-11-09-jpa-basic-1/">&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#sql을-직접-다룰-때-발생하는-문제점&quot; id=&quot;markdown-toc-sql을-직접-다룰-때-발생하는-문제점&quot;&gt;SQL을 직접 다룰 때 발생하는 문제점&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#반복-반복-그리고-반복&quot; id=&quot;markdown-toc-반복-반복-그리고-반복&quot;&gt;반복, 반복 그리고 반복&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sql에-의존적인-개발&quot; id=&quot;markdown-toc-sql에-의존적인-개발&quot;&gt;SQL에 의존적인 개발&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#jpa와-문제-해결&quot; id=&quot;markdown-toc-jpa와-문제-해결&quot;&gt;JPA와 문제 해결&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#패러다임의-불일치&quot; id=&quot;markdown-toc-패러다임의-불일치&quot;&gt;패러다임의 불일치&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#상속&quot; id=&quot;markdown-toc-상속&quot;&gt;상속&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#연관관계&quot; id=&quot;markdown-toc-연관관계&quot;&gt;연관관계&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#객체-그래프-탐색&quot; id=&quot;markdown-toc-객체-그래프-탐색&quot;&gt;객체 그래프 탐색&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#비교&quot; id=&quot;markdown-toc-비교&quot;&gt;비교&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;sql을-직접-다룰-때-발생하는-문제점&quot;&gt;SQL을 직접 다룰 때 발생하는 문제점&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;자바로 작성한 애플리케이션은 JDBC API를 사용하여 SQL을 데이터에 전달
  &lt;img src=&quot;/assets/img/blog/jpa-basic-1-1.jpeg&quot; alt=&quot;jdbc-api&quot; class=&quot;border lead&quot; width=&quot;480&quot; height=&quot;480&quot; loading=&quot;lazy&quot; /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;반복-반복-그리고-반복&quot;&gt;반복, 반복 그리고 반복&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;SQL의 문제점을 파악하기 위해 CRUD 기능 개발 예시&lt;/li&gt;
  &lt;li&gt;회원(Memeber) 객체 생성
    &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Member&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

      &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;memberId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

      &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;회원 객체를 데이터베이스에 관리할 목적으로 DAO(Data Access Object) 생성
    &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MemberDAO&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

      &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Member&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;memberId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;ul&gt;
      &lt;li&gt;회원 조회 기능 만들기
        &lt;ol&gt;
          &lt;li&gt;회원 조회용 SQL 생성
            &lt;ul&gt;
              &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SELECT MEMBER_ID, NAME FROM MEMBER M WHERE MEMBER_ID = ?&lt;/code&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;JDBC API를 사용하여 SQL 실행
            &lt;ul&gt;
              &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ResultSet rs = stmt.executeQuery(sql);&lt;/code&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;조회 결과를 Member 객체로 매핑
            &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;memberId&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;MEMBER_ID&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
 &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;NAME&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

 &lt;span class=&quot;nc&quot;&gt;Member&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;member&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Member&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;member&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setMemberId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;memberId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;member&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;회원 등록 기능을 위해 DAO에 save 메서드 추가
    &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MemberDAO&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

      &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Member&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;memberId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Member&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;member&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;ul&gt;
      &lt;li&gt;회원 등록 기능 만들기
        &lt;ol&gt;
          &lt;li&gt;회원 등록용 SQL 생성
            &lt;ul&gt;
              &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;String sql = &quot;INSERT INTO MEMBER(MEMBER_ID, NAME) VALUES(?, ?)&quot;;&lt;/code&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;회원 객체 값을 꺼내 SQL에 전달
            &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;n&quot;&gt;pstmt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;member&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getMemberId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;pstmt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;member&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;JDBC API를 사용해 SQL 실행
            &lt;ul&gt;
              &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pstmt.executeUpdate(sql);&lt;/code&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;회원 수정, 삭제하는 기능 역시 위의 과정들과 비슷하며 SQL과 JDBC API를 계속해서 반복 작성해야함&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;sql에-의존적인-개발&quot;&gt;SQL에 의존적인 개발&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;위의 과정을 수행하던 중 회원의 연락처도 받고 싶다는 요청이 들어옴&lt;/li&gt;
  &lt;li&gt;DAO, SQL문 모두 수정해야 하며 CRUD 기능 구현했던 부분들을 다 돌며 같은 수정을 반복해야함&lt;/li&gt;
  &lt;li&gt;또한, 데이터 접근 계층인 DAO를 사용하여 SQL을 숨긴다해도 DAO를 열어 어떤 SQL이 실행되는지 일일히 확인해야함&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;진정한 의미의 계층 분할이 어려움&lt;/p&gt;

  &lt;p&gt;엔티티를 신뢰할 수 없음&lt;/p&gt;

  &lt;p&gt;SQL에 의존적인 개발이 불가피&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;jpa와-문제-해결&quot;&gt;JPA와 문제 해결&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;JPA가 제공하는 CRUD API 기능
    &lt;ul&gt;
      &lt;li&gt;저장 기능
        &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;jpa&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;persist&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;member&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;객체를 데이터베이스에 저장&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;조회 기능
        &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;memberId&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;helloId&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;Member&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;member&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jpa&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Member&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;memberId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;객체 하나를 데이터베이스에서 조회&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;수정 기능
        &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;Member&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;member&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jpa&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Member&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;memberId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;member&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;이름변경&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;별도의 수정 메소드는 제공하지 않음&lt;/li&gt;
          &lt;li&gt;조회해서 값을 변경하면 트랜잭션 커밋시 적절한 UPDATE SQL 전달&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;연관된 객체 조회
        &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;Member&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;member&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jpa&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Member&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;memberId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;Team&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;team&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;member&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getTeam&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;패러다임의-불일치&quot;&gt;패러다임의 불일치&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;객체와 관계형 데이터베이스는 지향하는 목적이 다르므로 기능과 표현 방법도 다름 = 패러다임의 불일치 문제&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;상속&quot;&gt;상속&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;객체는 상속이라는 기능이 있으나 테이블은 없음&lt;/li&gt;
  &lt;li&gt;JDBC API를 사용하기 위해서는 부모 객체에서 부모 데이터만 꺼내 하나의 테이블당 한개씩 INSERT SQL을 작성해야함&lt;/li&gt;
  &lt;li&gt;JPA를 통한 해결책
    &lt;ul&gt;
      &lt;li&gt;Item을 상속한 Album 객체 저장하기 -&amp;gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;persist()&lt;/code&gt; 메소드 사용
        &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;jpa&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;persist&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;album&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;객체를 ITEM, ALBUM 두 테이블에 나누어 저장
        &lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ITEM&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ALBUM&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;Album 객체 조회
        &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;albumId&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;id100&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;Album&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;album&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jpa&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Album&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;albumId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;JPA는 ITEM과 ALBUM 두 테이블을 조인해서 필요한 데이터를 조회하고 결과를 반환
        &lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;I&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ITEM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;I&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ALBUM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;I&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ITEM_ID&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ITEM_ID&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;연관관계&quot;&gt;연관관계&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;객체: 참조를 통해 다른 객체와의 연관관계를 가지고 참조에 접근해서 연관된 객체 조회 / 참조가 있는 방향으로만 조회 가능&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;테이블: 외래 키를 사용하여 조인하여 연관된 테이블 조회 / 외래 키 하나로 서로 접근 가능
&lt;img src=&quot;/assets/img/blog/jpa-basic-1-2.jpeg&quot; alt=&quot;객체와테이블&quot; class=&quot;border lead&quot; width=&quot;480&quot; height=&quot;480&quot; loading=&quot;lazy&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;객체를 테이블에 맞추어 모델링
    &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Member&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        
      &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// MEMBER_ID 컬럼 사용&lt;/span&gt;
      &lt;span class=&quot;nc&quot;&gt;Long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;teamId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// TEAM_ID FK 컬럼 사용&lt;/span&gt;
      &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// USERNAME 컬럼 사용&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Team&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

      &lt;span class=&quot;nc&quot;&gt;Long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// TEAM_ID PK 사용&lt;/span&gt;
      &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// NAME 컬럼 사용&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;ul&gt;
      &lt;li&gt;외래 키까지 RDBMS 방식에 맞추면 참조를 통해 조회할 수 없어 객체지향의 특성을 잃게됨&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;객체지향 모델링
    &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Member&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

      &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// MEMBER_ID 컬럼 사용&lt;/span&gt;
      &lt;span class=&quot;nc&quot;&gt;Team&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;team&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 참조로 연관관계를 맺음&lt;/span&gt;
      &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// USERNAME 컬럼 사용&lt;/span&gt;

      &lt;span class=&quot;nc&quot;&gt;Team&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getTeam&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;team&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Team&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

      &lt;span class=&quot;nc&quot;&gt;Long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// TEAM_ID PK사용&lt;/span&gt;
      &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// NAME 컬럼 사용&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;ul&gt;
      &lt;li&gt;객체지향 모델링의 경우 객체를 테이블에 저장하거나 조회하기가 쉽지 않음&lt;/li&gt;
      &lt;li&gt;개발자가 중간에서 변환 역할을 해야함&lt;/li&gt;
      &lt;li&gt;저장
        &lt;ul&gt;
          &lt;li&gt;객체를 데이터베이스 저장하려면 team필드를 TEAM_ID 외래 키 값으로 변환해야함
            &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;n&quot;&gt;member&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;member&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getTeam&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;member&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getUsername&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;조회
        &lt;ul&gt;
          &lt;li&gt;TEAM_ID 외래 키 값을 Member 객체의 team 참조로 변환하여 객체에 보관
            &lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;M&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MEMBER&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;M&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TEAM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;M&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TEAM_ID&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TEAM_ID&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;객체-그래프-탐색&quot;&gt;객체 그래프 탐색&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;SQL을 직접 다루면 처음 실행하는 SQL에 따라 객체 그래프를 어디까지 탐색할 수 있는지 정해짐&lt;/li&gt;
  &lt;li&gt;JPA와 객체 그래프 탐색
    &lt;ul&gt;
      &lt;li&gt;JPA는 연관된 객체를 사용하는 시점에 적절한 SELECT SQL 실행&lt;/li&gt;
      &lt;li&gt;실제 객체를 사용하는 시점까지 데이터베이스 조회를 미룸 = &lt;strong&gt;지연 로딩&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;JPA는 지연 로딩을 투명하게 처리&lt;/li&gt;
      &lt;li&gt;JPA는 연관된 객체를 즉시 함께 조회할지 아니면 실제 사용되는 시점에 지연해서 조회할지 간단한 설정을 통해 정의 가능&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;비교&quot;&gt;비교&lt;/h3&gt;</content><author><name>Jinho Kim</name><email>haul0215@gmail.com</email></author><category term="[&quot;computer-science&quot;, &quot;jpa&quot;]" /><category term="computer-science" /><category term="jpa" /><summary type="html">ORM(Object-Relational Mapping)을 사용한 기술인 JPA를 통해 객체 중심 개발이 가능해지고 생산성과 유지보수가 좋아졌으며 테스트 작성 역시 편해졌다.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/img/blog/jpa-main.png" /><media:content medium="image" url="http://localhost:4000/assets/img/blog/jpa-main.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">자바의 정석</title><link href="http://localhost:4000/blog/update/computer-science/java-basic/2021-11-05-java-basic-3/" rel="alternate" type="text/html" title="자바의 정석" /><published>2021-11-05T00:00:00+09:00</published><updated>2021-11-05T00:00:00+09:00</updated><id>http://localhost:4000/blog/update/computer-science/java-basic/java-basic-3</id><content type="html" xml:base="http://localhost:4000/blog/update/computer-science/java-basic/2021-11-05-java-basic-3/">&lt;p&gt;자바의 정석 Chapter2&lt;/p&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#진법&quot; id=&quot;markdown-toc-진법&quot;&gt;진법&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#10진법과-2진법&quot; id=&quot;markdown-toc-10진법과-2진법&quot;&gt;10진법과 2진법&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#비트bit와-바이트byte&quot; id=&quot;markdown-toc-비트bit와-바이트byte&quot;&gt;비트(bit)와 바이트(byte)&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#8진법과-16진법&quot; id=&quot;markdown-toc-8진법과-16진법&quot;&gt;8진법과 16진법&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#정수의-진법-변환&quot; id=&quot;markdown-toc-정수의-진법-변환&quot;&gt;정수의 진법 변환&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#실수의-진법변환&quot; id=&quot;markdown-toc-실수의-진법변환&quot;&gt;실수의 진법변환&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#음수의-2진-표현---2의-보수법&quot; id=&quot;markdown-toc-음수의-2진-표현---2의-보수법&quot;&gt;음수의 2진 표현 - 2의 보수법&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#기본형primitive-type&quot; id=&quot;markdown-toc-기본형primitive-type&quot;&gt;기본형(Primitive type)&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#논리형---boolean&quot; id=&quot;markdown-toc-논리형---boolean&quot;&gt;논리형 - boolean&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#문자형---char&quot; id=&quot;markdown-toc-문자형---char&quot;&gt;문자형 - char&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#정수형---byte-short-int-long&quot; id=&quot;markdown-toc-정수형---byte-short-int-long&quot;&gt;정수형 - byte, short, int, long&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#실수형---float-double&quot; id=&quot;markdown-toc-실수형---float-double&quot;&gt;실수형 - float, double&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#형변환&quot; id=&quot;markdown-toc-형변환&quot;&gt;형변환&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#정수형간의-형변환&quot; id=&quot;markdown-toc-정수형간의-형변환&quot;&gt;정수형간의 형변환&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#실수형-간의-형변환&quot; id=&quot;markdown-toc-실수형-간의-형변환&quot;&gt;실수형 간의 형변환&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#정수형과-실수형-간의-형변환&quot; id=&quot;markdown-toc-정수형과-실수형-간의-형변환&quot;&gt;정수형과 실수형 간의 형변환&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#자동-형변환&quot; id=&quot;markdown-toc-자동-형변환&quot;&gt;자동 형변환&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;진법&quot;&gt;진법&lt;/h2&gt;

&lt;h3 id=&quot;10진법과-2진법&quot;&gt;10진법과 2진법&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;1946년 개발된 에니악은 10진법을 사용하도록 설계되었으나 전기회로는 전압이 불안정하여 전압을 10단계로 나누어 처리하는데 한계 존재&lt;/li&gt;
  &lt;li&gt;1950년 개발된 에드박은 전기가 흐르면 1, 흐르지 않으면 0으로 동작하도록 설계 ➜ 성공적&lt;/li&gt;
  &lt;li&gt;2진수는 10진수를 완벽히 표현가능하며 연산 역시 동일&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;비트bit와-바이트byte&quot;&gt;비트(bit)와 바이트(byte)&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;비트(bit, binary digit): 한 자리의 2진수, 컴퓨터가 값을 저장할 수 있는 최소단위&lt;/li&gt;
  &lt;li&gt;바이트(byte): 1비트는 너무 작은 단위이기 때문에 1비트 8개를 묶어 바이트 정의&lt;/li&gt;
  &lt;li&gt;워드(word): CPU가 한 번에 처리할 수 있는 데이터의 크기
    &lt;ul&gt;
      &lt;li&gt;32비트 CPU에서 1워드는 32비트(4바이트), 64비트 CPU에서는 64비트(8바이트)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;n비트로 표현할 수 있는 10진수&lt;/p&gt;

  &lt;p&gt;값의 개수: 2^n&lt;/p&gt;

  &lt;p&gt;값의 범위: 0 ~ 2^n-1&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;8진법과-16진법&quot;&gt;8진법과 16진법&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;8진수는 2진수 3자리를, 16진수는 2진수 4자리를 각각 한자리로 표현할 수 있기 때문에 자리수가 짧아져서 알아보기 쉽고 서로 간의 변환방법 또한 간단함
&lt;img src=&quot;/assets/img/blog/java-basic-3-1.jpeg&quot; alt=&quot;2진수를 8진수, 16진수로 변환하기&quot; class=&quot;border lead&quot; width=&quot;480&quot; height=&quot;480&quot; loading=&quot;lazy&quot; /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;정수의-진법-변환&quot;&gt;정수의 진법 변환&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;10진수를 n진수로 변환
    &lt;ul&gt;
      &lt;li&gt;주어진 수를 해당 진수로 더이상 나눌수 없을때까지 반복한 다음, 마지막 몫과 나머지를 아래부터 위로 순서대로 적기&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;n진수를 10진수로 변환
    &lt;ul&gt;
      &lt;li&gt;각 자리의 수에 해당 단위의 값을 곱해 모두 더하기&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;실수의-진법변환&quot;&gt;실수의 진법변환&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;10진 소수점수를 2진 소수점수로 변환하는 방법
    &lt;ul&gt;
      &lt;li&gt;10진수 0.625를 2진수로 변환하기
&lt;img src=&quot;/assets/img/blog/java-basic-3-2.jpeg&quot; alt=&quot;10진수를 2진수로 변환하기&quot; class=&quot;border lead&quot; width=&quot;480&quot; height=&quot;480&quot; loading=&quot;lazy&quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;음수의-2진-표현---2의-보수법&quot;&gt;음수의 2진 표현 - 2의 보수법&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;2진수로 ‘10’은 자리올림이 발생하고 0이 되는 수&lt;/li&gt;
  &lt;li&gt;2의 보수 관계에 있는 두 2진수를 더하면 (자리올림이 발생하고) 0이 됨&lt;/li&gt;
  &lt;li&gt;음수를 2진수로 표현하기
    &lt;ol&gt;
      &lt;li&gt;절대값
        &lt;ul&gt;
          &lt;li&gt;-5 ➜ 5&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;2진수
        &lt;ul&gt;
          &lt;li&gt;0101(2)&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;2의 보수
        &lt;ul&gt;
          &lt;li&gt;1011(2)&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;2의 보수 = 1의 보수 + 1&lt;/li&gt;
  &lt;li&gt;왜 ‘1의 보수 + 1’은 ‘2의 보수’인가?
    &lt;ul&gt;
      &lt;li&gt;어떤 2진수가 있을 때, 이 2진수의 1의 보수를 더하면 모든 자리가 1이됨&lt;/li&gt;
      &lt;li&gt;양변에 1을 더하면 우변은 0이 되고 올림이 발생하지만 4비트를 넘기때문에 버려짐&lt;/li&gt;
      &lt;li&gt;결국에는 0이 되므로 ‘1의 보수 + 1’은 ‘2의 보수’와 같음&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;기본형primitive-type&quot;&gt;기본형(Primitive type)&lt;/h2&gt;

&lt;h3 id=&quot;논리형---boolean&quot;&gt;논리형 - boolean&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;true와 false 중 하나를 저장, 기본값(default)은 false&lt;/li&gt;
  &lt;li&gt;대답(yes/no), 스위치(on/off) 등의 논리구현에 주로 사용&lt;/li&gt;
  &lt;li&gt;크기: 1byte&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;문자형---char&quot;&gt;문자형 - char&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;문자를 저장하기 위한 변수를 선언한 떄 사용&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;char ch = 'A';&lt;/code&gt;: 문자의 유니코드(정수)가 저장&lt;/li&gt;
  &lt;li&gt;어떤 문자의 유니코드를 알고 싶으면 char형 변수에 저장된 값을 정수형으로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;casting&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;특수 문자 다루기&lt;/p&gt;

    &lt;table&gt;
      &lt;thead&gt;
        &lt;tr&gt;
          &lt;th style=&quot;text-align: left&quot;&gt;특수문자&lt;/th&gt;
          &lt;th style=&quot;text-align: left&quot;&gt;문자리터럴&lt;/th&gt;
        &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tab&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\t&lt;/code&gt;&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;backspace&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\b&lt;/code&gt;&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;form feed&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\f&lt;/code&gt;&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;new line&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\n&lt;/code&gt;&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;carriage return&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\r&lt;/code&gt;&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;역슬래쉬(\)&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\\&lt;/code&gt;&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;작은따옴표&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\'&lt;/code&gt;&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;큰따옴표&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\&quot;&lt;/code&gt;&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;유니코드(16진수) 문자&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\u유니코드 (예: char a='\u0041')&lt;/code&gt;&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
  &lt;li&gt;char타입의 표현형식
    &lt;ul&gt;
      &lt;li&gt;char타입은 2byte(=16bit)이므로, 16자리의 2진수로 표현할 수 있는 정수의 개수인 65,536개의 코드 사용 가능&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;short타입의 표현범위: -2^15 ~ 2^15 - 1 (-32768 ~ 32767)
char타입의 표현범위: 0 ~ 2^15 - 1 (0 ~ 65535)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;인코딩과 디코딩(encoding &amp;amp; decoding)
    &lt;ul&gt;
      &lt;li&gt;인코딩: 문자를 코드로 변환하는 것&lt;/li&gt;
      &lt;li&gt;디코딩: 코드를 문자로 변환하는 것&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;아스키(ASCII, American Standard Code for Information Interchange)
    &lt;ul&gt;
      &lt;li&gt;128개의 문자 집합을 제공하는 7bit부호&lt;/li&gt;
      &lt;li&gt;숫자 ‘0~9’, 영문자 ‘A~Z’와 ‘a~z’가 연속적으로 배치&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;확장 아스키(Extended ASCII)와 한글
    &lt;ul&gt;
      &lt;li&gt;일반적으로 데이터는 byte단위로 다뤄지는데 아스키는 7bit이므로 1bit가 남게됨&lt;/li&gt;
      &lt;li&gt;남는 공간을 활용해 문자를 추가로 정의한 것이 확장 아스키&lt;/li&gt;
      &lt;li&gt;새롭게 추가된 128개의 문자는 여러 국가와 기업에서 서로의 필요에 따라 다르게 정의&lt;/li&gt;
      &lt;li&gt;ISO에서 발표한 대표적인 표준은 ‘ISO 8859-1’&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;코드 페이지(code page, cp)
    &lt;ul&gt;
      &lt;li&gt;확장 아스키의 256개의 문자를 어떤 숫자로 변환할 것인지 적어놓은 ‘문자 코드표’&lt;/li&gt;
      &lt;li&gt;한글 윈도우는 ‘CP 949’, 영문 윈도우는 ‘CP 437’ 사용&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;유니코드(Unicode)
    &lt;ul&gt;
      &lt;li&gt;전 세계의 모든 문자를 하나의 통일된 문자집합으로 표현한 것&lt;/li&gt;
      &lt;li&gt;유니코드 문자 셋: 유니코드에 포함시키고자 하는 문자들의 집합&lt;/li&gt;
      &lt;li&gt;유니코드 인코딩: 유니코드 문자 셋에 번호를 붙인 것&lt;/li&gt;
      &lt;li&gt;자바는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;UTF-16&lt;/code&gt; 사용
        &lt;ul&gt;
          &lt;li&gt;모든 문자를 2byte의 고정크기로 표현&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;정수형---byte-short-int-long&quot;&gt;정수형 - byte, short, int, long&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;정수형의 표현형식과 범위
&lt;img src=&quot;/assets/img/blog/java-basic-3-3.jpeg&quot; alt=&quot;10진수를 2진수로 변환하기&quot; class=&quot;border lead&quot; width=&quot;480&quot; height=&quot;480&quot; loading=&quot;lazy&quot; /&gt;
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;n비트로 표현할 수 있는 정수의 개수: 2^n개
n비트로 표현할 수 있는 정수의 범위: -2^(n-1) ~ 2^(n-1) - 1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;타입의 크기만 알면, 모든 정수형의 표현범위를 쉽게 계산할 수 있음&lt;/li&gt;
  &lt;li&gt;정수형의 선택 기준
    &lt;ul&gt;
      &lt;li&gt;정수형 변수를 선언할 떄는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;int&lt;/code&gt; 타입으로 하고, int의 범위(약 ±20억)를 넘어서는 수를 다뤄야할 떄는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;long&lt;/code&gt;사용&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;정수형의 오버플로우
    &lt;ul&gt;
      &lt;li&gt;오버플로우(overflow): 해당 타입이 표현할 수 있는 값의 범위를 넘어서는 것&lt;/li&gt;
      &lt;li&gt;정수형 타입이 표현할 수 있는 최대값에 1을 더하면 최소값이 되고, 최소값에서 1을 빼면 최대값이 됨&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;부호있는 정수의 오버플로우
    &lt;ul&gt;
      &lt;li&gt;부호없는 정수는 2진수로 ‘0000’이 될 때, 부호있는 정수는 부호비트가 0에서 1이 될 때 오버플로우가 발생
        &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;short&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sMin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;32768&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;short&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sMax&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;32767&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cMin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cMax&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;65535&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sMin = &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sMin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sMin-1 = &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;short&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sMin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sMax = &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sMax&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sMax+1 = &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;short&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sMax&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;cMin = &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cMin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;cMin-1 = &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)--&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cMin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;cMax = &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cMax&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;cMax+1 = &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)++&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cMax&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
        &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sMin = -32768
sMin-1 = 32767
sMax = 32767
sMax+1 = -32768
cMin = 0
cMin-1 = 65535
cMax = 65535
cMax+1 = 0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;실수형---float-double&quot;&gt;실수형 - float, double&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;실수형의 경우 정수형과 달리 오버플로우가 발생하면 변수의 값이 무한대(infinity)가 됨&lt;/li&gt;
  &lt;li&gt;정수형에는 없는 언더플로우(underflow) 존재 -&amp;gt; 양의 최소값보다 작은 값이 되는 경우로 변수의 값이 0이 됨&lt;/li&gt;
  &lt;li&gt;실수형은 부호(S), 지수(E), 가수(M) 세 부분으로 구성&lt;/li&gt;
  &lt;li&gt;실수형의 값을 출력하기 위해서는 printf메서드의 지시자 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;%f&lt;/code&gt; 사용&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;실수형의 저장형식&lt;/p&gt;

    &lt;table&gt;
      &lt;thead&gt;
        &lt;tr&gt;
          &lt;th style=&quot;text-align: center&quot;&gt;기호&lt;/th&gt;
          &lt;th style=&quot;text-align: left&quot;&gt;의미&lt;/th&gt;
          &lt;th style=&quot;text-align: left&quot;&gt;설명&lt;/th&gt;
        &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td style=&quot;text-align: center&quot;&gt;S&lt;/td&gt;
          &lt;td style=&quot;text-align: left&quot;&gt;부호(Sign bit)&lt;/td&gt;
          &lt;td style=&quot;text-align: left&quot;&gt;0이면 양수, 1이면 음수&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td style=&quot;text-align: center&quot;&gt;E&lt;/td&gt;
          &lt;td style=&quot;text-align: left&quot;&gt;지수(Exponent)&lt;/td&gt;
          &lt;td style=&quot;text-align: left&quot;&gt;부호있는 정수, 지수의 범위는 -127~128(float), -1023~1024(double&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td style=&quot;text-align: center&quot;&gt;M&lt;/td&gt;
          &lt;td style=&quot;text-align: left&quot;&gt;가수(Mantissa)&lt;/td&gt;
          &lt;td style=&quot;text-align: left&quot;&gt;실제값을 저장하는 부분, 10진수로 7자리(float), 15자리(double)의 정밀도로 저장 가능&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/blog/java-basic-3-4.jpeg&quot; alt=&quot;10진수를 2진수로 변환하기&quot; class=&quot;border lead&quot; width=&quot;480&quot; height=&quot;480&quot; loading=&quot;lazy&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;형변환&quot;&gt;형변환&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;변수 또는 상수의 타입을 다른 타입으로 변환하는 것&lt;/li&gt;
  &lt;li&gt;형 변환 방법: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;(타입)피연산자&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;기본형(Primitive type)에서 boolean을 제외한 나머지 타입들은 서로 형변환 가능&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;정수형간의-형변환&quot;&gt;정수형간의 형변환&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;큰 타입에서 작은 타입으로 변환할 시 값 손실(loss of data)이 발생할 수 있음&lt;/li&gt;
  &lt;li&gt;작은 타입에서 큰 타입으로 변환할 시 값 손실은 없고 나머지 빈공간은 0 또는 1로 채워짐&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Integer.toBinaryString(int i)&lt;/code&gt;를 사용하여 10진 정수를 2진 정수로 변환할 수 있음&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;실수형-간의-형변환&quot;&gt;실수형 간의 형변환&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;작은 타입에서 큰 타입으로 변환하는 경우, 빈 공간을 0으로 채움&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;정수형과-실수형-간의-형변환&quot;&gt;정수형과 실수형 간의 형변환&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;정수형을 실수형으로 변환
    &lt;ul&gt;
      &lt;li&gt;정수를 2진수로 변환 -&amp;gt; 정규화하여 실수의 저장형식에 맞게 저장&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;실수형을 정수형으로 변환
    &lt;ul&gt;
      &lt;li&gt;실수형을 정수형으로 형변환시 반올림이 발생하지 않음 = 소수점 이하는 버려짐&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;자동-형변환&quot;&gt;자동 형변환&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;기존의 값을 최대한 보존할 수 있는 타입으로 자동 형변환&lt;/li&gt;
  &lt;li&gt;boolean을 제외한 나머지 7개의 기본형은 서로 형변환 가능&lt;/li&gt;
  &lt;li&gt;기본형과 참조형은 서로 형변환할 수 없음&lt;/li&gt;
  &lt;li&gt;서로 다른 타입의 변수간의 연산은 형변환을 하는 것이 원칙이지만, 값의 범위가 작은 타입에서 큰 타입으로의 형변환은 생략할 수 있음&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Jinho Kim</name><email>haul0215@gmail.com</email></author><category term="[&quot;computer-science&quot;, &quot;java-basic&quot;]" /><category term="computer-science" /><category term="java-basic" /><summary type="html">자바의 정석 Chapter2 어떤 프로그래밍 언어를 시작하든 가장 기본적으로 배우는 부분이 변수 &amp;amp; 자료형 파트이다. 내용 역시 비슷한 부분들이 많다. 그래서 알게모르게 넘어가는 부분이 많은데 사실 알고리즘을 포함한 다른 프로그래밍을 하기 위해서 가장 기초적인 부분인만큼 조금 더 자세히 공부해볼 예정이다.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/img/blog/java-main.jpeg" /><media:content medium="image" url="http://localhost:4000/assets/img/blog/java-main.jpeg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">자바의 정석</title><link href="http://localhost:4000/blog/update/computer-science/java-basic/2021-11-04-java-basic-2/" rel="alternate" type="text/html" title="자바의 정석" /><published>2021-11-04T00:00:00+09:00</published><updated>2021-11-04T00:00:00+09:00</updated><id>http://localhost:4000/blog/update/computer-science/java-basic/java-basic-2</id><content type="html" xml:base="http://localhost:4000/blog/update/computer-science/java-basic/2021-11-04-java-basic-2/">&lt;p&gt;자바의 정석 Chapter2&lt;/p&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#변수variable란&quot; id=&quot;markdown-toc-변수variable란&quot;&gt;변수(variable)란?&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#변수의-선언과-초기화&quot; id=&quot;markdown-toc-변수의-선언과-초기화&quot;&gt;변수의 선언과 초기화&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#변수의-타입&quot; id=&quot;markdown-toc-변수의-타입&quot;&gt;변수의 타입&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#기본형과-참조형&quot; id=&quot;markdown-toc-기본형과-참조형&quot;&gt;기본형과 참조형&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#기본형primitive-type&quot; id=&quot;markdown-toc-기본형primitive-type&quot;&gt;기본형(primitive type)&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#상수와-리터럴constant--literal&quot; id=&quot;markdown-toc-상수와-리터럴constant--literal&quot;&gt;상수와 리터럴(constant &amp;amp; literal)&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#형식화된-출력---printf&quot; id=&quot;markdown-toc-형식화된-출력---printf&quot;&gt;형식화된 출력 - printf()&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#화면에서-입력받기---scanner&quot; id=&quot;markdown-toc-화면에서-입력받기---scanner&quot;&gt;화면에서 입력받기 - Scanner&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;변수variable란&quot;&gt;변수(variable)란?&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;변수란, 단 하나의 값을 저장할 수 있는 메모리 공간&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;변수의-선언과-초기화&quot;&gt;변수의 선언과 초기화&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;변수 선언 방법: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;int age;&lt;/code&gt; - age라는 이름의 변수를 선언
    &lt;ul&gt;
      &lt;li&gt;변수 타입: 변수에 저장될 값의 type을 지정&lt;/li&gt;
      &lt;li&gt;변수 이름: 메모리 공간에 붙여줄 이름, 서로 구별되어야 함&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;변수의 초기화(initialization): 변수를 사용하기 전에 처음으로 값을 저장하는 것
    &lt;ul&gt;
      &lt;li&gt;초기화 하는 이유: 메모리는 여러 프로그램이 공유하는 자원이므로 다른 프로그램에 의해 저장된 ‘알 수 없는 값(쓰레기값, Garbage Value)’가 남아있을 수 있기 때문&lt;/li&gt;
      &lt;li&gt;한 줄에 하나씩 선언하거나 타입이 같은 경우 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;,&lt;/code&gt;를 구분자로 한 줄에 선언 가능
        &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;int a;
int b;
int x = 0;
int y = 0;

int a, b;
int x = 0, y = 0;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;변수에 저장된 값을 읽어오는 방법
    &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;year&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;age&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;14&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;year&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;year&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;age&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2000&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// age의 값에 2000을 더해서 변수 year에 저장&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;age&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;age&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// age 값을 1 증가&lt;/span&gt;

  &lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;year&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;0
14
2014
15
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;ol&gt;
      &lt;li&gt;두 개의 변수 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;age&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;year&lt;/code&gt;을 선언하고 각각 0과 14로 초기화&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;System.out.println&lt;/code&gt;을 통해 화면에 출력&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;age&lt;/code&gt;에 저장된 값에 2000을 더한 다음, 결과를 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;year&lt;/code&gt;에 저장&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;age&lt;/code&gt;에 저장된 값 1 증가시킨 후, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;age&lt;/code&gt;에 저장&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;두 변수의 값 교환하기
    &lt;ul&gt;
      &lt;li&gt;x의 값을 위한 임시 저장소로 새로운 변수 tmp선언
        &lt;ol&gt;
          &lt;li&gt;변수 x에 저장된 값 tmp에 저장&lt;/li&gt;
          &lt;li&gt;변수 y에 저장된 값 x에 저장&lt;/li&gt;
          &lt;li&gt;변수 tmp에 저장된 값 y에 저장
            &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
 &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

 &lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;x:&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot; y:&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

 &lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

 &lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;x:&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot; y:&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;            &lt;/div&gt;
            &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;x:10 y:20
x:20 y:10
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;변수의 명명 규칙
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;식별자(identifier)&lt;/strong&gt;: ‘변수의 이름’처럼 프로그래밍에서 사용하는 모든 이름
        &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  1. 대소문자가 구분되며 길이에 제한이 없음
  2. 예약어는 사용불가
  3. 숫자로 시작하면 안됨
  4. 특수문자는 '_'와 '$'만 허용
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;예약어(keyword, reserved word)&lt;/strong&gt;: 프로그래밍언어의 구문에 사용되는 단어, 클래스나 변수, 메서드의 이름으로 사용 불가능
        &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  1. 클래스 이름의 첫 글자는 항상 대문자 / 변수와 메서드 이름의 첫 글자는 항상 소문자
  2. 여러 단어로 이루어진 이름의 단어는 첫 글자를 대문자
  3. 상수의 이름은 모두 대문자 / 여러 단어로 이루어진 경우 '_'로 구분
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;변수의-타입&quot;&gt;변수의 타입&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;값(data)의 종류(type)
    &lt;ul&gt;
      &lt;li&gt;문자형(char)&lt;/li&gt;
      &lt;li&gt;숫자
        &lt;ul&gt;
          &lt;li&gt;정수형(byte, short, int, long)&lt;/li&gt;
          &lt;li&gt;실수형(float, double)&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;기본형과-참조형&quot;&gt;기본형과 참조형&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;기본형 변수: 실제 값(data) 저장
    &lt;ul&gt;
      &lt;li&gt;논리형(boolean), 문자형(char), 정수형(byte, short, int, long), 실수형(float, double)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;참조형 변수: 어떤 값이 저장되어 있는 주소(memory address) 값 저장
    &lt;ul&gt;
      &lt;li&gt;객체의 주소 저장&lt;/li&gt;
      &lt;li&gt;기본값을 제외한 나머지 타입&lt;/li&gt;
      &lt;li&gt;C언어와 달리 참조형 변수 간 연산 불가능&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;기본형primitive-type&quot;&gt;기본형(primitive type)&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;분류&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;타입&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;설명&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;논리형&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;boolean&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;true&lt;/code&gt;와 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;false&lt;/code&gt; 중 하나를 값으로 가지며, 조건식과 논리적 계산에 사용&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;문자형&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;char&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;문자를 저장하는데 사용되며, 하나의 문자만 저장 가능&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;정수형&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;byte&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;short&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;int&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;long&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;정수를 저장하는데 사용하며, 주로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;int&lt;/code&gt; 사용, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;byte&lt;/code&gt;는 이진데이터를 다룰 때 사용, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;short&lt;/code&gt;는 C언어와의 호환을 위해 추가&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;실수형&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;float&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;boolean&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;실수를 저장하는데 사용되며, 주로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;double&lt;/code&gt; 사용&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;ul&gt;
  &lt;li&gt;각 타입마다 저장할 수 있는 값의 범위가 다르므로 저장할 값의 범위에 맞는 타입을 선택하기!
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;int&lt;/code&gt;는 CPU가 가장 효율적으로 처리할 수 있는 타입이지만 메모리 절약을 위해서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;byte&lt;/code&gt;나 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;short&lt;/code&gt; 선택&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;각 타입의 변수가 저장할 수 있는 값의 범위&lt;/li&gt;
&lt;/ul&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;자료형&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;저장 가능한 값의 범위&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;bit&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;byte&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;boolean&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;false, true&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;8&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;char&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;‘\u0000’ ~ ‘\uffff’ (0~2^16-1, 0~65535)&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;16&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;byte&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;-128 ~ 127&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;8&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;short&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;-32,768 ~ 32,767&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;16&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;int&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;-2^31 ~ 2^31 - 1&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;32&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;4&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;long&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;-2^63 ~ 2^63 - 1&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;64&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;8&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;float&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;1.4&lt;em&gt;10^-45 ~ 3.4&lt;/em&gt;10^38&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;32&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;4&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;double&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;4.9&lt;em&gt;10^-324 ~ 1.8&lt;/em&gt;10^308&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;64&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;8&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;ul&gt;
  &lt;li&gt;실수형은 정수형보다 큰 값을 표현할 수 있으나 오차가 발생할 수도 있음
    &lt;ul&gt;
      &lt;li&gt;보다 높은 정밀도가 필요한 경우 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;double&lt;/code&gt; 사용 (정밀도 15자리)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;상수와-리터럴constant--literal&quot;&gt;상수와 리터럴(constant &amp;amp; literal)&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;상수: 변수와 같이 값을 저장할 수 있는 공간이지만, 한 번 저장하면 다른 값으로 변경 불가능
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;final int MAX_SPEED = 10;&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;상수는 반드시 선언과 동시에 초기화&lt;/li&gt;
      &lt;li&gt;상수의 이름은 모두 대문자, 여러 단어인 경우 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_&lt;/code&gt;로 구분&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;리터럴: 값을 한 번 저장하면 변경할 수 없는 저장공간이라고 정의한 상수와 구분하기 위해 리터럴이라는 용어 사용
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;final int MAX_VALUE = 100;&lt;/code&gt; 에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MAX_VALUE&lt;/code&gt;는 상수, 100은 리터럴&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;상수가 필요한 이유
    &lt;ul&gt;
      &lt;li&gt;리터럴에 의미있는 이름을 붙임으로써 코드의 이해와 수정을 돕기 위해 필요&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;리터럴의 타입과 접미사&lt;/p&gt;

    &lt;table&gt;
      &lt;thead&gt;
        &lt;tr&gt;
          &lt;th style=&quot;text-align: left&quot;&gt;종류&lt;/th&gt;
          &lt;th style=&quot;text-align: left&quot;&gt;리터럴&lt;/th&gt;
          &lt;th style=&quot;text-align: left&quot;&gt;접미사&lt;/th&gt;
        &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td style=&quot;text-align: left&quot;&gt;논리형&lt;/td&gt;
          &lt;td style=&quot;text-align: left&quot;&gt;false, true&lt;/td&gt;
          &lt;td style=&quot;text-align: left&quot;&gt;없음&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td style=&quot;text-align: left&quot;&gt;정수형&lt;/td&gt;
          &lt;td style=&quot;text-align: left&quot;&gt;123, 0b0101, 077, 0xFF, 100L&lt;/td&gt;
          &lt;td style=&quot;text-align: left&quot;&gt;L&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td style=&quot;text-align: left&quot;&gt;실수형&lt;/td&gt;
          &lt;td style=&quot;text-align: left&quot;&gt;3.14, 3.0e8, 1.4f&lt;/td&gt;
          &lt;td style=&quot;text-align: left&quot;&gt;f, d&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td style=&quot;text-align: left&quot;&gt;문자형&lt;/td&gt;
          &lt;td style=&quot;text-align: left&quot;&gt;‘A’, ‘1’, ‘\n’&lt;/td&gt;
          &lt;td style=&quot;text-align: left&quot;&gt;없음&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td style=&quot;text-align: left&quot;&gt;문자열&lt;/td&gt;
          &lt;td style=&quot;text-align: left&quot;&gt;“ABC”, “123”, “true”&lt;/td&gt;
          &lt;td style=&quot;text-align: left&quot;&gt;없음&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;

    &lt;ul&gt;
      &lt;li&gt;JDK1.7 부터 정수와 리터럴 중간에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_&lt;/code&gt;를 넣을 수 있어 큰 숫자 편하게 읽을 수 있음&lt;/li&gt;
      &lt;li&gt;리터럴에 소수점이나 10의 제곱을 나타내는 기호 E 또는 e, 접미사 f, F, d, D가 있으면 실수형 리터럴로 간주&lt;/li&gt;
    &lt;/ul&gt;

    &lt;table&gt;
      &lt;thead&gt;
        &lt;tr&gt;
          &lt;th style=&quot;text-align: left&quot;&gt;자료형&lt;/th&gt;
          &lt;th style=&quot;text-align: center&quot;&gt;실수형 리터럴&lt;/th&gt;
          &lt;th style=&quot;text-align: center&quot;&gt;다른 형태의 동등한 표현&lt;/th&gt;
        &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;double&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&quot;text-align: center&quot;&gt;10.&lt;/td&gt;
          &lt;td style=&quot;text-align: center&quot;&gt;10.0&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;double&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&quot;text-align: center&quot;&gt;.10&lt;/td&gt;
          &lt;td style=&quot;text-align: center&quot;&gt;0.10&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;float&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&quot;text-align: center&quot;&gt;10f&lt;/td&gt;
          &lt;td style=&quot;text-align: center&quot;&gt;10.0f&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;float&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&quot;text-align: center&quot;&gt;3.14e3f&lt;/td&gt;
          &lt;td style=&quot;text-align: center&quot;&gt;3140.0f&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;double&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&quot;text-align: center&quot;&gt;1e1&lt;/td&gt;
          &lt;td style=&quot;text-align: center&quot;&gt;10.0&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;double&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&quot;text-align: center&quot;&gt;1e-3&lt;/td&gt;
          &lt;td style=&quot;text-align: center&quot;&gt;0.001&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
  &lt;li&gt;타입의 불일치
    &lt;ul&gt;
      &lt;li&gt;타입이 달라도 저장범위가 넓은 타입에 좁은 타입의 값을 저장하는 것은 허용&lt;/li&gt;
    &lt;/ul&gt;

    &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'A'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// OK, 문자 'A'의 유니코드인 65가 변수 i에 저장&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;123&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// OK, int보다 long의 범위가 더 넓음&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.14f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// OK, float보다 double의 범위가 더 넓음&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x123456789&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 에러, int타입의 범위를 넘는 값 저장&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.14&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 에러, float타입보다 double 타입의 범위가 넓음&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;byte&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;65&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// OK, byte타입에 저장 가능한 범위의 int타입 리터럴&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;short&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x1234&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// OK, short타입에 저장 가능한 범위의 int타입 리터럴&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;문자 리터럴과 문자열 리터럴
    &lt;ul&gt;
      &lt;li&gt;문자 리터럴: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;'A'&lt;/code&gt;와 같이 작은따옴표로 문자 하나를 감싼 것&lt;/li&gt;
      &lt;li&gt;문자열 리터럴: 두 문자 이상은 큰 따옴표로 감싸야 함&lt;/li&gt;
    &lt;/ul&gt;

    &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'J'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Java&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 변수 name에 문자열 리터럴 &quot;Java&quot; 저장&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// OK, 내용이 없는 빈 문자열&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 에러, ''안에 반드시 하나의 문자 필요&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;' '&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// OK, 공백 문자(blank)로 변수 ch 초기화&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Java&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// String객체 생성&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Ja&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;va&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// name은 &quot;Java&quot;&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;8.0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// str은 &quot;Java8.0&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;형식화된-출력---printf&quot;&gt;형식화된 출력 - printf()&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;println()&lt;/code&gt;의 경우 값을 변환하지 않고는 다른 형식으로 출력할 수 없음&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;printf()&lt;/code&gt;는 지시자(specifier)를 통해 변수의 값을 여러 가지 형식으로 변환하여 출력 가능&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;자주 사용하는 지시자&lt;/p&gt;

    &lt;table&gt;
      &lt;thead&gt;
        &lt;tr&gt;
          &lt;th style=&quot;text-align: left&quot;&gt;지시자&lt;/th&gt;
          &lt;th style=&quot;text-align: left&quot;&gt;설명&lt;/th&gt;
        &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;%b&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&quot;text-align: left&quot;&gt;불리언(boolean) 형식으로 출력&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;%d&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&quot;text-align: left&quot;&gt;10진(decimal) 정수의 형식으로 출력&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;%o&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&quot;text-align: left&quot;&gt;8진(octal) 정수의 형식으로 출력&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;%x, %X&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&quot;text-align: left&quot;&gt;16진(hexa-decimal) 정수의 형식으로 출력&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;%f&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&quot;text-align: left&quot;&gt;부동 소수점(floating-point) 형식으로 출력&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;%e, %E&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&quot;text-align: left&quot;&gt;지수(exponent) 표현식의 형식으로 출력&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;%c&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&quot;text-align: left&quot;&gt;문자(character)로 출력&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;%s&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&quot;text-align: left&quot;&gt;문자열(string)으로 출력&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;byte&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;short&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'A'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;finger&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;big&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100_000_000_000L&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hex&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0xFFFF_FFFF_FFFF_FFFF&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;octNum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mo&quot;&gt;010&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 8진수 10, 10진수로 8&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hexNum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 16진수 10, 10진수로 16&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;binNum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mb&quot;&gt;0b10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 2진수 10, 10진수로 2&lt;/span&gt;

  &lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;b=%d%n&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;s=%d%n&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;c=%c, %d %n&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;finger=[%5d]%n&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;finger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;finger=[%-5d]%n&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;finger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;finger=[%05d]%n&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;finger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;big=%d%n&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;big&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;hex=%#x%n&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;octNum=%o, %d%n&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;octNum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;octNum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;hexNum=%x, %d%n&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hexNum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hexNum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;binNum=%s, %d%n&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toBinaryString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;binNum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;binNum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;b=1
s=2
c=A, 65
finger=[   10]
finger=[10   ]
finger=[00010]
big=100000000000
hex=0xffffffffffffffff
octNum=10, 8
hexNum=10, 16
binNum=10, 2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;화면에서-입력받기---scanner&quot;&gt;화면에서 입력받기 - Scanner&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Scanner클래스를 사용하기 위해 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;import java.util.*;&lt;/code&gt; 추가&lt;/li&gt;
  &lt;li&gt;Scanner클래스 객체 생성 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Scanner scanner = new Scanner(System.in);&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nextLint()&lt;/code&gt;메서드 호출하면 입력대기 상태에 있다가 Enter누르면 입력한 내용이 문자열로 반환
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;String input = scanner.nextLint();&lt;/code&gt;: 입력받은 내용을 input에 저장&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;int num = Integer.parseInt(input);&lt;/code&gt;: 입력받은 내용을 input타입의 값으로 변환&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.util.*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ScannerEx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;Scanner&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Scanner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    
    &lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;두 자리 정수를 하나 입력해주세요.&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;nextLine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;parseInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 입력받은 문자열을 숫자로 변환&lt;/span&gt;
    
    &lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;입력내용: &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;num=%d%n&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;두 자리 정수를 하나 입력해주세요.&amp;gt;22
입력내용: 22
num=22
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Jinho Kim</name><email>haul0215@gmail.com</email></author><category term="[&quot;computer-science&quot;, &quot;java-basic&quot;]" /><category term="computer-science" /><category term="java-basic" /><summary type="html">자바의 정석 Chapter2 어떤 프로그래밍 언어를 시작하든 가장 기본적으로 배우는 부분이 변수 &amp;amp; 자료형 파트이다. 내용 역시 비슷한 부분들이 많다. 그래서 알게모르게 넘어가는 부분이 많은데 사실 알고리즘을 포함한 다른 프로그래밍을 하기 위해서 가장 기초적인 부분인만큼 조금 더 자세히 공부해볼 예정이다.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/img/blog/java-main.jpeg" /><media:content medium="image" url="http://localhost:4000/assets/img/blog/java-main.jpeg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">자료구조와 알고리즘</title><link href="http://localhost:4000/blog/update/computer-science/datastructure/2021-11-02-%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0%EC%99%80-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/" rel="alternate" type="text/html" title="자료구조와 알고리즘" /><published>2021-11-02T00:00:00+09:00</published><updated>2021-11-02T00:00:00+09:00</updated><id>http://localhost:4000/blog/update/computer-science/datastructure/%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0%EC%99%80-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98</id><content type="html" xml:base="http://localhost:4000/blog/update/computer-science/datastructure/2021-11-02-%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0%EC%99%80-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">&lt;p&gt;자바를 이용해 자료구조와 알고리즘에 대해 알아보자&lt;/p&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#자료구조란-무엇일까&quot; id=&quot;markdown-toc-자료구조란-무엇일까&quot;&gt;자료구조란 무엇일까?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#자료구조를-배우는-이유&quot; id=&quot;markdown-toc-자료구조를-배우는-이유&quot;&gt;자료구조를 배우는 이유&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#알고리즘이란-무엇일까&quot; id=&quot;markdown-toc-알고리즘이란-무엇일까&quot;&gt;알고리즘이란 무엇일까?&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#연습-문제&quot; id=&quot;markdown-toc-연습-문제&quot;&gt;연습 문제&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;자료구조란-무엇일까&quot;&gt;자료구조란 무엇일까?&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;자료구조: 특정한 문제 및 목표를 해결하기 위해 여러 요소를 모아 조직화된 데이터를 이루는 것
    &lt;ul&gt;
      &lt;li&gt;선형 구조: 데이터를 일렬로 나열 / 인접 요소들 간 하나의 요소만 존재&lt;/li&gt;
      &lt;li&gt;비선형 구조: 데이터를 계층 구조화 / 인접 요소들 간 다수의 요소들이 존재&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;자료구조를-배우는-이유&quot;&gt;자료구조를 배우는 이유&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;여러 흩어진 요소들을 하나의 조직으로 구성하고 가장 효율적인 방법으로 데이터를 관리하고 저장하기 위해&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;알고리즘이란-무엇일까&quot;&gt;알고리즘이란 무엇일까?&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;주어진 문제를 해결하기 위한 일련의 과정 및 논리적인 방법&lt;/li&gt;
  &lt;li&gt;알고리즘과 자료구조는 효율적인 결과 도출을 위해 함께 사용&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;연습-문제&quot;&gt;연습 문제&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;네 개의 값 중 최소값을 찾는 메서드
    &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Practice01_1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;min&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;minValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
          &lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

      &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;minValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;min&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// min 값을 data1로 초기화&lt;/span&gt;

          &lt;span class=&quot;c1&quot;&gt;// min값이 data2보다 큰 경우 min을 data2로 갱신&lt;/span&gt;
          &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;min&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; 
              &lt;span class=&quot;n&quot;&gt;min&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
          &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

          &lt;span class=&quot;c1&quot;&gt;// min값이 data3보다 큰 경우 min을 data3으로 갱신&lt;/span&gt;
          &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;min&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; 
              &lt;span class=&quot;n&quot;&gt;min&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
          &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

          &lt;span class=&quot;c1&quot;&gt;// min값이 data4보다 큰 경우 min을 data4로 갱신&lt;/span&gt;
          &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;min&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; 
              &lt;span class=&quot;n&quot;&gt;min&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
          &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

          &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;중복을 포함한 다섯 개의 값 중 최댓값을 구하는 메서드
    &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;maxValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;max&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// max값을 data1로 초기화&lt;/span&gt;

      &lt;span class=&quot;c1&quot;&gt;// max값이 data2보다 작은 경우 max값을 data2로 갱신&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;max&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;max&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

      &lt;span class=&quot;c1&quot;&gt;// max값이 data3보다 작은 경우 max값을 data3으로 갱신&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;max&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;max&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

      &lt;span class=&quot;c1&quot;&gt;// max값이 data4보다 작은 경우 max값을 data4로 갱신&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;max&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;max&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

      &lt;span class=&quot;c1&quot;&gt;// max값이 data5보다 작은 경우 max값을 data5로 갱신&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;max&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;max&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name>Jinho Kim</name><email>haul0215@gmail.com</email></author><category term="[&quot;computer-science&quot;, &quot;datastructure&quot;]" /><category term="computer-science" /><category term="datastructure" /><summary type="html">자바를 이용해 자료구조와 알고리즘에 대해 알아보자</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/img/blog/algorithm-main.png" /><media:content medium="image" url="http://localhost:4000/assets/img/blog/algorithm-main.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">배열</title><link href="http://localhost:4000/blog/update/computer-science/datastructure/2021-11-02-%EB%B0%B0%EC%97%B4/" rel="alternate" type="text/html" title="배열" /><published>2021-11-02T00:00:00+09:00</published><updated>2021-11-02T00:00:00+09:00</updated><id>http://localhost:4000/blog/update/computer-science/datastructure/%EB%B0%B0%EC%97%B4</id><content type="html" xml:base="http://localhost:4000/blog/update/computer-science/datastructure/2021-11-02-%EB%B0%B0%EC%97%B4/">&lt;p&gt;자바를 이용해 자료구조와 알고리즘에 대해 알아보자&lt;/p&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#배열이란&quot; id=&quot;markdown-toc-배열이란&quot;&gt;배열이란?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#배열의-선언&quot; id=&quot;markdown-toc-배열의-선언&quot;&gt;배열의 선언&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#배열의-생성과-초기화&quot; id=&quot;markdown-toc-배열의-생성과-초기화&quot;&gt;배열의 생성과 초기화&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#배열의-반복문&quot; id=&quot;markdown-toc-배열의-반복문&quot;&gt;배열의 반복문&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;배열이란&quot;&gt;배열이란?&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;배열: 데이터 타입이 같은 여러 변수들을 모아 묶어 놓은 것&lt;/li&gt;
  &lt;li&gt;변수의 양이 많아질수록 배열을 사용하는 것이 가독성 측면이나 코드 작성 효율성 측면에서 좋음&lt;/li&gt;
  &lt;li&gt;배열 선언 방식: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;int[] arr = new int[10001];&lt;/code&gt; // 10001개의 int 타입을 저장하는 배열 생성&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;배열의-선언&quot;&gt;배열의 선언&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;배열을 이루는 요소
    &lt;ul&gt;
      &lt;li&gt;배열을 구성하는 자료형&lt;/li&gt;
      &lt;li&gt;배열의 이름&lt;/li&gt;
      &lt;li&gt;배열의 길이: 음수를 제외한 양수와 0만 사용 가능, 음수를 사용하면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NegativeArraySizeException&lt;/code&gt;에러 발생&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;기본 자료형(Primitive type)과 참조 자료형(Reference type) 모두 배열 구성 가능&lt;/li&gt;
  &lt;li&gt;방식
    &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// (1) 자료형[] 변수명 - 개인적으로 조금 더 선호&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[];&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// (2) 자료형 변수명[]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;배열의-생성과-초기화&quot;&gt;배열의 생성과 초기화&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;int[] arr;&lt;/code&gt;배열을 선언하면 arr라는 메모리 공간이 할당되고 메모리 주소값을 갖는 형태&lt;/li&gt;
  &lt;li&gt;참조형 변수는 초기화 없이 선언하면 null값을 가짐&lt;/li&gt;
  &lt;li&gt;배열의 시작은 index 0부터 시작&lt;/li&gt;
  &lt;li&gt;자료형의 기본 값&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;| 자료형 | 기본값 |
|:—|:—|
| 참조 타입 | null |
| byte | 0 |
| short | 0 |
| int | 0 |
| float | 0.0f |
| long | 0L |
| double | 0.0 |
| char | ‘\u0000’ |
| boolean | false |&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;배열을 초기화 하기 위한 3가지 방법
    &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;array_init&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;];&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 선언과 동시에 0으로 초기화&lt;/span&gt;
          &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;};&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 배열 생성 시, 크기를 지정하지 않고 저장할 요소만 명시&lt;/span&gt;
          &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;};&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 저장할 요소만 명시&lt;/span&gt;

          &lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;arr1: &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Arrays&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arr1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;, length: &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
          &lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;arr2: &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Arrays&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arr2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;, length: &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
          &lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;arr3: &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Arrays&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arr3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;, length: &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  arr1: [0], length: 1
  arr2: [1, 2, 3], length: 3
  arr3: [1, 2, 3, 4, 5], length: 5
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;배열의-반복문&quot;&gt;배열의 반복문&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;for문, while문, do-while문, foreach문&lt;/li&gt;
  &lt;li&gt;배열의 index값은 &lt;strong&gt;0&lt;/strong&gt;부터 시작&lt;/li&gt;
  &lt;li&gt;배열의 크기를 벗어난 index로 접근시 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ArrayIndexOutOfBoundsException&lt;/code&gt;이 발생하므로 이 오류가 나온다면 천천히 배열의 크기부터 찾아보기!&lt;/li&gt;
  &lt;li&gt;foreach: 첨자 변수 대신 배열의 요소를 저장할 변수를 선언하고 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:&lt;/code&gt;으로 순회할 배열의 참조 변수를 선언
    &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;students&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;};&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;studentNumber&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;students&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;학생 번호: &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;studentNumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  학생 번호: 1
  학생 번호: 2
  학생 번호: 3
  학생 번호: 4
  학생 번호: 5
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;배열의 연산으로 특정 위치에 값을 삽입, 삭제하거나 값을 읽어오는 경우 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;foreach&lt;/code&gt; 사용 어려움&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Jinho Kim</name><email>haul0215@gmail.com</email></author><category term="[&quot;computer-science&quot;, &quot;datastructure&quot;]" /><category term="computer-science" /><category term="datastructure" /><summary type="html">자바를 이용해 자료구조와 알고리즘에 대해 알아보자</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/img/blog/algorithm-main.png" /><media:content medium="image" url="http://localhost:4000/assets/img/blog/algorithm-main.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">디자인 패턴</title><link href="http://localhost:4000/blog/update/computer-science/design-pattern/2021-11-02-%EB%94%94%EC%9E%90%EC%9D%B8-%ED%8C%A8%ED%84%B4-1/" rel="alternate" type="text/html" title="디자인 패턴" /><published>2021-11-02T00:00:00+09:00</published><updated>2021-11-02T00:00:00+09:00</updated><id>http://localhost:4000/blog/update/computer-science/design-pattern/%EB%94%94%EC%9E%90%EC%9D%B8-%ED%8C%A8%ED%84%B4-1</id><content type="html" xml:base="http://localhost:4000/blog/update/computer-science/design-pattern/2021-11-02-%EB%94%94%EC%9E%90%EC%9D%B8-%ED%8C%A8%ED%84%B4-1/">&lt;p&gt;디자인 패턴에 대해 알아보자&lt;/p&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#싱글톤-패턴singleton-pattern&quot; id=&quot;markdown-toc-싱글톤-패턴singleton-pattern&quot;&gt;싱글톤 패턴(Singleton Pattern)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;싱글톤-패턴singleton-pattern&quot;&gt;싱글톤 패턴(Singleton Pattern)&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;인스턴스를 오직 한개만 만들고 그 인스턴스에 글로벌하게 접근할 수 있는 방법을 제공하는 것&lt;/li&gt;
  &lt;li&gt;하나의 인스턴스를 메모리에 등록하여 여러 스레드가 동시에 공유해서 사용하는 등 효율을 높일 수 있다. ➜ &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;동시성(concurrency)&lt;/code&gt; 문제 고려&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Jinho Kim</name><email>haul0215@gmail.com</email></author><category term="[&quot;computer-science&quot;, &quot;design-pattern&quot;]" /><category term="computer-science" /><category term="design-pattern" /><summary type="html">디자인 패턴에 대해 알아보자</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/img/blog/design-pattern-main.jpeg" /><media:content medium="image" url="http://localhost:4000/assets/img/blog/design-pattern-main.jpeg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">자바의 정석</title><link href="http://localhost:4000/blog/update/computer-science/java-basic/2021-11-02-java-basic-1/" rel="alternate" type="text/html" title="자바의 정석" /><published>2021-11-02T00:00:00+09:00</published><updated>2021-11-02T00:00:00+09:00</updated><id>http://localhost:4000/blog/update/computer-science/java-basic/java-basic-1</id><content type="html" xml:base="http://localhost:4000/blog/update/computer-science/java-basic/2021-11-02-java-basic-1/">&lt;p&gt;자바의 정석 Chapter1&lt;/p&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#자바란&quot; id=&quot;markdown-toc-자바란&quot;&gt;자바란?&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#자바의-역사&quot; id=&quot;markdown-toc-자바의-역사&quot;&gt;자바의 역사&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#자바언어의-특징&quot; id=&quot;markdown-toc-자바언어의-특징&quot;&gt;자바언어의 특징&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#jvmjava-virtual-machine&quot; id=&quot;markdown-toc-jvmjava-virtual-machine&quot;&gt;JVM(Java Virtual Machine)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#자바개발환경-구축하기&quot; id=&quot;markdown-toc-자바개발환경-구축하기&quot;&gt;자바개발환경 구축하기&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#자바-개발도구jdk-설치하기&quot; id=&quot;markdown-toc-자바-개발도구jdk-설치하기&quot;&gt;자바 개발도구(JDK) 설치하기&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#java-api-문서-보는법&quot; id=&quot;markdown-toc-java-api-문서-보는법&quot;&gt;Java API 문서 보는법&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#자바로-프로그램-작성하기&quot; id=&quot;markdown-toc-자바로-프로그램-작성하기&quot;&gt;자바로 프로그램 작성하기&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#hellojava&quot; id=&quot;markdown-toc-hellojava&quot;&gt;Hello.java&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#자주-발생하는-에러와-해결방법&quot; id=&quot;markdown-toc-자주-발생하는-에러와-해결방법&quot;&gt;자주 발생하는 에러와 해결방법&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#자바프로그램의-실행과정&quot; id=&quot;markdown-toc-자바프로그램의-실행과정&quot;&gt;자바프로그램의 실행과정&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#주석comment&quot; id=&quot;markdown-toc-주석comment&quot;&gt;주석(comment)&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;자바란&quot;&gt;자바란?&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;썬 마이크로시스템즈(Sun Microsystems, Inc)에서 개발하여 1996년 1월에 공식적으로 발표한 객체지향 프로그래밍 언어 ➜ 2010년에 썬이 오라클(Oracle)에 인수되며 자바는 오라클사의 제품이 되었음&lt;/li&gt;
  &lt;li&gt;운영체제에 독립적이라는 것이 가장 중요한 특징 ➜ 운영체제에 따라 프로그램을 전혀 변경하지 않고도 실행 가능&lt;/li&gt;
  &lt;li&gt;객체지향 개념과 C++의 장점을 채택하고 잘 사용되지 않는 부분은 제외하며 이해하기 쉬운 간결한 표현이 가능하도록 했음&lt;/li&gt;
  &lt;li&gt;풍부한 클래스 라이브러리(Java API)를 통해 프로그래밍에 필요한 요소들을 기본적으로 제공&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;자바의-역사&quot;&gt;자바의 역사&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;1991년 제임스 코슬링(James Gosling)이 만든 오크(Oak)라는 언어에서 시작
    &lt;ul&gt;
      &lt;li&gt;C++의 장점을 도입하고 단점을 보완&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Oak를 인터넷에 적합하도록 개발 방향을 바꾸면서 이름을 자바(Java)로 변경&lt;/li&gt;
  &lt;li&gt;자바로 개발한 웹브라우저인 ‘핫 자바(Hot Java)’ 발표&lt;/li&gt;
  &lt;li&gt;1996년 1월 자바 정식 버전 발표&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;자바언어의-특징&quot;&gt;자바언어의 특징&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;운영체제에 독립적&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;자바 응용프로그램은 운영체제나 하드웨어가 아닌 JVM하고만 통신하고 JVM이 자바 응용프로그램에서 전달받은 명령을 해당 운영체제가 이해할 수 있도록 변환하여 전달&lt;/li&gt;
      &lt;li&gt;자바로 작성된 프로그램은 운영체제에 독립적이지만 JVM은 운영체제에 종속적
        &lt;blockquote&gt;
          &lt;p&gt;한번 작성하면, 어디서나 실행된다.(Write once, run anywhere)&lt;/p&gt;
        &lt;/blockquote&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;객체지향언어&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;객체지향개념의 특징인 상속, 캡슐화, 다형성이 잘 적용됨&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;비교적 배우기 쉬움&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;연산자와 기본구문은 C++에서, 객체지향 구문은 스몰톡(small talk)에서 가져옴&lt;/li&gt;
      &lt;li&gt;간결하고 이해하기 쉬운 코드 작성 가능&lt;/li&gt;
      &lt;li&gt;재사용성과 유지보수 용이성 등의 장점과 간결하면서 명료한 객체지향적 설계 가능&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;자동 메모리 관리(Garbage Collection)&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;가비지컬렉터(Garbage Collector)가 자동적으로 메모리를 관리해주기 때문에 프로그래머가 따로 관리하지 않아도 됨&lt;/li&gt;
      &lt;li&gt;참조되지 않은 객체 탐색 후 삭제 ➜ 삭제된 객체의 메모리 반환 ➜ 힙 메모리 재사용&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;네트워크와 분산처리 지원&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;다향한 네트워크 프로그래밍 라이브러리(Java API)를 통해 쉬운 개발 지원&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;멀티쓰레드 지원&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;자바의 멀티쓰레드는 시스템과 관계없이 구현가능하며, 관련 라이브러리 역시 제공&lt;/li&gt;
      &lt;li&gt;여러 쓰레드에 대한 스케줄링(scheduling)을 자바 인터프리터가 담당&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;동적 로딩(Dynamic Loading)&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;실행 시에 모든 클래스가 로딩되는 것이 아닌 필요한 시점에 클래스 로딩&lt;/li&gt;
      &lt;li&gt;일부 클래스가 변경되어도 비교적 적은 작업만으로 처리할 수 있는 유연한 애플리케이션 작성 가능&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;jvmjava-virtual-machine&quot;&gt;JVM(Java Virtual Machine)&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;자바를 실행하기 위한 가상 기계&lt;/li&gt;
  &lt;li&gt;시스템 메모리를 관리하고 자바 기반 애플리케이션을 위해 이식 가능한 환경을 제공&lt;/li&gt;
  &lt;li&gt;어떤 기기상에서 실행되고 있는 프로세스, 특히 자바 앱에 대한 리소스를 대표하고 통제하는 서버
&lt;img src=&quot;/assets/img/blog/java-basic-jvm.jpeg&quot; alt=&quot;java애플리케이션 vs 일반 애플리케이션&quot; class=&quot;border lead&quot; width=&quot;480&quot; height=&quot;480&quot; loading=&quot;lazy&quot; /&gt;
    &lt;ul&gt;
      &lt;li&gt;일반 애플리케이션 코드는 OS만 거치고 하드웨어로 전달되는제 비해 Java 애플리케이션은 JVM을 거쳐야 하고 실행 시 interpret되므로 상대적으로 느림&lt;/li&gt;
      &lt;li&gt;요즘앤 컴파일된 자바코드를 기계어로 변환해주는 JIT컴파일러와 향상된 최적화 기술로 속도의 격차를 줄임&lt;/li&gt;
      &lt;li&gt;Java Application은 해당 OS에서 실행가능한 JVM만 있다면 OS에 상관없이 어디든 실행 가능&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;자바개발환경-구축하기&quot;&gt;자바개발환경 구축하기&lt;/h2&gt;

&lt;h3 id=&quot;자바-개발도구jdk-설치하기&quot;&gt;자바 개발도구(JDK) 설치하기&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;JDK(Java Development Kit): 자바 개발 도구, JRE + 개발에 필요한 실행파일(java.exe 등)&lt;/li&gt;
  &lt;li&gt;JRE(Java Runtime Environment): 자바실행환경, 자바로 작성된 응용프로그램이 실행되기 위한 최소환경, JVM + 클래스 라이브러리(Java API)&lt;/li&gt;
  &lt;li&gt;JDK의 bin 디렉토리에 있는 주요 실행파일
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;javac.exe&lt;/code&gt;: 자바 컴파일러, 자바 소스코드를 바이트코드로 컴파일&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;java.exe&lt;/code&gt;: 자바 인터프리터, 컴파일러가 생성한 바이트코드를 해석하고 실행&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;javap.exe&lt;/code&gt;: 역어셈블러, 컴파일된 클래스파일을 원래의 소스로 변환&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;javadoc.exe&lt;/code&gt;: 자동 문서 생성기, 소스파일에 있는 주석(/* */)을 이용하여 Java API 문서와 같은 형식의 문서를 자동 생성함&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jar.exe&lt;/code&gt;: 압축 프로그램, 클래스 파일과 프로그램의 실행에 관련된 파일을 하나의 jar파일로 압축하거나 압축해제함&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;java-api-문서-보는법&quot;&gt;Java API 문서 보는법&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://opentutorials.org/module/516/6222&quot;&gt;Opentutorials.org&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;자바로-프로그램-작성하기&quot;&gt;자바로 프로그램 작성하기&lt;/h2&gt;

&lt;h3 id=&quot;hellojava&quot;&gt;Hello.java&lt;/h3&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Hello&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// main 메서드 선언부&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Hello, world.&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 화면에 글자 출력&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;Hello.java 작성 ➜ javac.exe 컴파일 ➜ Hello.class 생성 ➜ java.exe 실행 ➜ “Hello, world.”출력&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;자주-발생하는-에러와-해결방법&quot;&gt;자주 발생하는 에러와 해결방법&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cannot find symbol&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cannot resolve symbol&lt;/code&gt;
    &lt;ul&gt;
      &lt;li&gt;지정된 변수나 메서드를 찾을 수 없음을 의미&lt;/li&gt;
      &lt;li&gt;선언되지 않은 변수나 메서드를 사용하거나 이름을 잘못 사용하거나 대소문자 구분을 안했을 경우&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;';'expected&lt;/code&gt;
    &lt;ul&gt;
      &lt;li&gt;세미콜론 ‘;’이 필요한 곳에 없음을 의미&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Exception in thread &quot;main&quot; java.lang.NoSuchMethodError: main&lt;/code&gt;
    &lt;ul&gt;
      &lt;li&gt;클래스 내에 main 메서드가 존재하지 않거나 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;public static void main(String[] args)&lt;/code&gt;에 오타가 있는 경우&lt;/li&gt;
      &lt;li&gt;대소문자 확인!&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Exception in thread &quot;main&quot; java.lang.NoClassDefFoundError: Hello&lt;/code&gt;
    &lt;ul&gt;
      &lt;li&gt;클래스를 찾을 수 없다는 에러&lt;/li&gt;
      &lt;li&gt;클래스의 철자, 대소문자 확인 / 클래스파일 생성되었는지 확인&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;illegal start of expression&lt;/code&gt;
    &lt;ul&gt;
      &lt;li&gt;문장의 앞부분이 문법에 맞지 않음 = 문장에 문법적인 오류 존재&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;class, interface, or enum expected&lt;/code&gt;
    &lt;ul&gt;
      &lt;li&gt;보통 괄호 {, }의 개수가 일치하지 않는 경우에 발생&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;p&gt;에러 발생 시, 해당 부분의 코드를 살펴보고 이상이 없으면 주위(윗줄 또는 아랫줄) 살펴보기&lt;/p&gt;

  &lt;p&gt;그래도 이상이 없으면 에러 메시지를 잊고 기본적인 부분 재확인 (에러는 사소한 것인 경우가 많음)&lt;/p&gt;

  &lt;p&gt;의심이 가는 부분을 주석처리하거나 따로 떼어내서 테스트&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;자바프로그램의-실행과정&quot;&gt;자바프로그램의 실행과정&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;내부 진행 순서
    &lt;ol&gt;
      &lt;li&gt;프로그램 실행에 필요한 클래스(*.class파일) 로드&lt;/li&gt;
      &lt;li&gt;클래스 파일 검사(파일형식, 악성코드 체크)&lt;/li&gt;
      &lt;li&gt;지정된 클래스(Hello)에서 main(String[] args)를 호출&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;주석comment&quot;&gt;주석(comment)&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;범위 주석: ‘/&lt;em&gt;‘와 ‘&lt;/em&gt;/’사이의 내용은 주석으로 간주&lt;/li&gt;
  &lt;li&gt;한 줄 주석: ‘//’부터 라인 끝까지의 내용은 주석으로 간주&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Jinho Kim</name><email>haul0215@gmail.com</email></author><category term="[&quot;computer-science&quot;, &quot;java-basic&quot;]" /><category term="computer-science" /><category term="java-basic" /><summary type="html">자바의 정석 Chapter1</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/img/blog/java-main.jpeg" /><media:content medium="image" url="http://localhost:4000/assets/img/blog/java-main.jpeg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">기본 자료형</title><link href="http://localhost:4000/blog/update/computer-science/algorithm/2021-11-01-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EA%B8%B0%EB%B3%B8-%EC%9E%90%EB%A3%8C%ED%98%95/" rel="alternate" type="text/html" title="기본 자료형" /><published>2021-11-01T00:00:00+09:00</published><updated>2021-11-01T00:00:00+09:00</updated><id>http://localhost:4000/blog/update/computer-science/algorithm/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EA%B8%B0%EB%B3%B8-%EC%9E%90%EB%A3%8C%ED%98%95</id><content type="html" xml:base="http://localhost:4000/blog/update/computer-science/algorithm/2021-11-01-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EA%B8%B0%EB%B3%B8-%EC%9E%90%EB%A3%8C%ED%98%95/">&lt;blockquote&gt;
  &lt;p&gt;데이터를 어떻게 표현하느냐가 프로그래밍의 핵심이다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#기본-자료형-부트캠프&quot; id=&quot;markdown-toc-기본-자료형-부트캠프&quot;&gt;기본 자료형 부트캠프&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#자바-비트shift-연산자&quot; id=&quot;markdown-toc-자바-비트shift-연산자&quot;&gt;자바 비트(Shift) 연산자&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#자바-비트-논리-연산자&quot; id=&quot;markdown-toc-자바-비트-논리-연산자&quot;&gt;자바 비트 논리 연산자&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#기본-자료형-문제를-풀기-전-알아야-하는-내용&quot; id=&quot;markdown-toc-기본-자료형-문제를-풀기-전-알아야-하는-내용&quot;&gt;기본 자료형 문제를 풀기 전 알아야 하는 내용&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#기본-자료형-이해하기&quot; id=&quot;markdown-toc-기본-자료형-이해하기&quot;&gt;기본 자료형 이해하기&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#문제41-패리티-계산하기&quot; id=&quot;markdown-toc-문제41-패리티-계산하기&quot;&gt;문제4.1 패리티 계산하기&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#무식한-방법&quot; id=&quot;markdown-toc-무식한-방법&quot;&gt;무식한 방법&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#좀-더-나은-방법---1&quot; id=&quot;markdown-toc-좀-더-나은-방법---1&quot;&gt;좀 더 나은 방법 - 1&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#좀-더-나은-방법---2-캐시-이용&quot; id=&quot;markdown-toc-좀-더-나은-방법---2-캐시-이용&quot;&gt;좀 더 나은 방법 - 2: 캐시 이용&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;기본-자료형-부트캠프&quot;&gt;기본 자료형 부트캠프&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;정수에서 1로 세팅된 비트의 개수 찾는 프로그램&lt;/li&gt;
  &lt;li&gt;최하위 비트부터 시작하여 한번에 한 비트씩 테스트
    &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;short&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;countBits&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;short&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numBits&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;numBits&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numBits&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;시간 복잡도는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;O(n)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;자바-비트shift-연산자&quot;&gt;자바 비트(Shift) 연산자&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;연산식&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;설명&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;x &amp;lt;&amp;lt; y&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;정수 x의 각 비트를 y만큼 왼쪽으로 이동 (빈자리는 0으로 채움)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;x &amp;gt;&amp;gt; y&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;정수 x의 각 비트를 y만큼 오른쪽으로 이동 (빈자리는 정수 a의 최상위 부호비트와 같은 값으로 채위짐)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;x &amp;gt;&amp;gt;&amp;gt; y&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;정수 x의 각 비트를 y만큼 오른쪽으로 이동 (빈자리는 0으로 채워짐)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;2 &amp;lt;&amp;lt; 3
    00000000 00000000 00000000 00000010 -&amp;gt; 2
 00000000000 00000000 00000000 00010??? -&amp;gt; 16

-16 &amp;gt;&amp;gt; 3
11111111 11111111 11111111 11110000 -&amp;gt; -16
11111111 11111111 11111111 11111110 000 -&amp;gt; -2

-16 &amp;gt;&amp;gt;&amp;gt; 3
11111111 11111111 11111111 11110000 -&amp;gt; -16
00011111 11111111 11111111 11111110 000 -&amp;gt; 536870910
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;자바-비트-논리-연산자&quot;&gt;자바 비트 논리 연산자&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;연산식&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;논리&lt;/th&gt;
      &lt;th&gt;설명&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;amp;&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;AND&lt;/td&gt;
      &lt;td&gt;두 비트 모두 1일 경우에만 결과가 1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;|&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;OR&lt;/td&gt;
      &lt;td&gt;두 비트 중 하나만 1일 경우에만 결과가 1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;^&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;XOR&lt;/td&gt;
      &lt;td&gt;두 비트 중 하나는 1이고 다른 하나가 0일 경우에만 결과가 1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;~&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;NOT&lt;/td&gt;
      &lt;td&gt;비트 반전(보수)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;기본-자료형-문제를-풀기-전-알아야-하는-내용&quot;&gt;기본 자료형 문제를 풀기 전 알아야 하는 내용&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;비트 연산&lt;/strong&gt;, 특히 XOR&lt;/li&gt;
  &lt;li&gt;하드웨어랑 무관하게 &lt;strong&gt;마스크&lt;/strong&gt;의 사용법&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;1로 세팅된 하위 비트의 값을 최적의 방법으로 지울 수 있어야 함&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;부호&lt;/strong&gt;의 여부와 부호가 있을 경우 &lt;strong&gt;시프트 연산&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;입력이 작은 경우 &lt;strong&gt;연산 결과를 캐싱&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;교환법칙과 결합법칙&lt;/strong&gt;에 대해 잘 알고 있어야 &lt;strong&gt;병렬&lt;/strong&gt; 연산 수행이나 &lt;strong&gt;연산 순서&lt;/strong&gt;를 바꿀 수 있음&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;기본-자료형-이해하기&quot;&gt;기본 자료형 이해하기&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;비트 연산 잘 다루기&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Integer.MIN_VALUE&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;FLOAT.MAX_VALUE&lt;/code&gt; 등과 같은 숫자 타입의 최댓값과 최솟값 사용법
    &lt;ul&gt;
      &lt;li&gt;모든 경우에 Math 클래스를 사용할 수 있는 것이 아니기 때문에 직접 대소 비교를 하며 max, min을 찾아야 하는 경우&lt;/li&gt;
      &lt;li&gt;max, min의 초기값을 0 또는 대소비교에 영향을 주지 않는 숫자를 택하여 초기화&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;박스 타입의 인스턴스 만드는 방법
    &lt;ul&gt;
      &lt;li&gt;문자열을 숫자로 변환하는 방법 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Integer.parseInt&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;값을 비교할 때 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Double.compare(x, 1.23) == 0&lt;/code&gt;과 같이 박스 타입의 정적 메서드 사용
    &lt;ul&gt;
      &lt;li&gt;부동 소수점의 양수 무한대, 음수 무한대, NaN에 대해 보다 탄력적으로 동작&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Math의 핵심 메서드에는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;abs&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ceil&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;floor&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;min&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;max&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pow&lt;/code&gt; 등이 존재&lt;/li&gt;
  &lt;li&gt;자동 박싱의 한계
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AutoBoxing&lt;/code&gt;이란 자바 컴파일러가 primitive data type을 그에 상응하는 wrapper class로 자동 변환 시켜주는 것&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Unboxing&lt;/code&gt;은 자바 컴파일러가 wrapper class를 primitive data type으로 자동 변환 시켜주는 것&lt;/li&gt;
      &lt;li&gt;기본 타입과 박싱된 타입의 차이
        &lt;ul&gt;
          &lt;li&gt;기본 타입은 값만 가지고 있지만 박싱된 타입은 값 + 식별성이라는 속성을 가짐 ➜ 박싱된 타입의 두 인스턴스는 값이 같아도 다르다고 식별될 수 있음&lt;/li&gt;
          &lt;li&gt;기본 타입의 값은 NULL을 허용하지만 박싱된 타입은 허용하지 않음&lt;/li&gt;
          &lt;li&gt;기본 타입이 박싱된 타입보다 시간과 메모리 사용면에서 효율적&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;정수, 문자, 문자열간의 변환 방법
    &lt;ul&gt;
      &lt;li&gt;정수 ➜ 문자열: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;String.valueOf(number)&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;&quot; + number&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Integer.toString(number)&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;문자열 ➜ 정수: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Integer.parseInt(String str)&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Integer.valueOf(str).intValue()&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Random의 핵심 메서드 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nextInt()&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nextDouble()&lt;/code&gt;등이 있음&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;문제41-패리티-계산하기&quot;&gt;문제4.1 패리티 계산하기&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;2진수의 패리티(parity)는 1로 세팅된 비트의 개수가 홀수면 1, 짝수면 0&lt;/li&gt;
  &lt;li&gt;주로 데이터를 저장하거나 네트워크 통신 시 오류 확인 용도로 사용&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lookup table&lt;/code&gt; 이용&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;무식한-방법&quot;&gt;무식한 방법&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;1로 세팅된 모든 비트의 개수를 세기&lt;/li&gt;
  &lt;li&gt;1이 짝수 개인지 홀수 개인지를 알면 되므로 2로 나눈 나머지 값만 기억
    &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;short&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;parity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;short&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;^=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;좀-더-나은-방법---1&quot;&gt;좀 더 나은 방법 - 1&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;하위 비트를 한번에 지워서 최선의 경우가 평균적인 경우의 성능을 향상시키는 방법&lt;/li&gt;
  &lt;li&gt;k가 1로 세팅된 비트의 개수라고 하면 시간 복잡도는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;O(k)&lt;/code&gt;
    &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;short&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;parity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;short&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;^=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 1로 세팅된 비트 중 가장 낮은 비트를 지우는 것&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;좀-더-나은-방법---2-캐시-이용&quot;&gt;좀 더 나은 방법 - 2: 캐시 이용&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;어떤 그룹의 패리티를 계산할 때, 결합 법칙이 성립함&lt;/li&gt;
  &lt;li&gt;64비트를 16비트 4개의 그룹으로 나누고 계산
    &lt;ul&gt;
      &lt;li&gt;16비트는 65356으로 배열에 저장이 가능하기 때문에 선택&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name>Jinho Kim</name><email>haul0215@gmail.com</email></author><category term="[&quot;computer-science&quot;, &quot;algorithm&quot;]" /><category term="computer-science" /><category term="algorithm" /><summary type="html">데이터를 어떻게 표현하느냐가 프로그래밍의 핵심이다.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/img/blog/algorithm-main.png" /><media:content medium="image" url="http://localhost:4000/assets/img/blog/algorithm-main.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">TDD란?</title><link href="http://localhost:4000/blog/update/computer-science/wooahan-techcourse/2021-11-01-TDD%EB%9E%80/" rel="alternate" type="text/html" title="TDD란?" /><published>2021-11-01T00:00:00+09:00</published><updated>2021-11-01T00:00:00+09:00</updated><id>http://localhost:4000/blog/update/computer-science/wooahan-techcourse/TDD%EB%9E%80</id><content type="html" xml:base="http://localhost:4000/blog/update/computer-science/wooahan-techcourse/2021-11-01-TDD%EB%9E%80/">&lt;p&gt;TDD에 대해 알아보자&lt;/p&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#tddtest-driven-development&quot; id=&quot;markdown-toc-tddtest-driven-development&quot;&gt;TDD(Test-Driven Development)&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#기존-개발-프로세스&quot; id=&quot;markdown-toc-기존-개발-프로세스&quot;&gt;기존 개발 프로세스&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#tdd-프로세스&quot; id=&quot;markdown-toc-tdd-프로세스&quot;&gt;TDD 프로세스&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#tdd-사용-이유&quot; id=&quot;markdown-toc-tdd-사용-이유&quot;&gt;TDD 사용 이유&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#tdd는-설계방법론인가&quot; id=&quot;markdown-toc-tdd는-설계방법론인가&quot;&gt;TDD는 설계방법론인가?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#tdd가-실패하는-이유&quot; id=&quot;markdown-toc-tdd가-실패하는-이유&quot;&gt;TDD가 실패하는 이유&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#테스트-범위에-따른-분류&quot; id=&quot;markdown-toc-테스트-범위에-따른-분류&quot;&gt;테스트 범위에 따른 분류&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#단위-테스트의-목적&quot; id=&quot;markdown-toc-단위-테스트의-목적&quot;&gt;단위 테스트의 목적&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#좋은-단위-테스트---first-법칙&quot; id=&quot;markdown-toc-좋은-단위-테스트---first-법칙&quot;&gt;좋은 단위 테스트 - FIRST 법칙&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;tddtest-driven-development&quot;&gt;TDD(Test-Driven Development)&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;테스트 코드를 먼저 만들고, 실제 프로덕션 코드를 만드는 개발 방법&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;기존-개발-프로세스&quot;&gt;기존 개발 프로세스&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;설계 ➜ 개발(코드 작성) ➜ 테스트(코드 작성) ➜ 설계 수정&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;tdd-프로세스&quot;&gt;TDD 프로세스&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;설계 ➜ 테스트(코드 작성) ➜ 설계 작성 ➜ 개발(코드 수정)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;tdd-사용-이유&quot;&gt;TDD 사용 이유&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;리팩토링이 편하며 변화에 대한 두려움을 줄여줌&lt;/li&gt;
  &lt;li&gt;디버깅 시간 감소&lt;/li&gt;
  &lt;li&gt;동작하는 문서로써의 역할 수행&lt;/li&gt;
  &lt;li&gt;테스트 커버리지가 높아짐&lt;/li&gt;
  &lt;li&gt;오버 엔지니어링 방지&lt;/li&gt;
  &lt;li&gt;설계에 대한 빠른 피드백 가능&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;tdd는-설계방법론인가&quot;&gt;TDD는 설계방법론인가?&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;높은 응집을 유도하지 않음&lt;/li&gt;
  &lt;li&gt;단일 책임 원칙과 인터페이스 분리 원칙 위배에 어떤 신호도 주지 않음&lt;/li&gt;
  &lt;li&gt;인터페이스 일관성 도출 X&lt;/li&gt;
  &lt;li&gt;리팩토링 단계는 좋은 구조를 안내하거나 갖도록 강제하지 않음&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;tdd가-실패하는-이유&quot;&gt;TDD가 실패하는 이유&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;코드가 이루고자 하는 가치나 기능을 테스트하는 것이 아니라 기능을 어떻게 구현하고 있는지를 테스트&lt;/li&gt;
  &lt;li&gt;결국 테스트 케이스들이 구현체와 결합도가 높아짐&lt;/li&gt;
  &lt;li&gt;구현체들을 리팩토링하면 결합된 테스트 케이스들이 모두 깨져버림&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;테스트-범위에-따른-분류&quot;&gt;테스트 범위에 따른 분류&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;통합 테스트: 여러 작업 단위가 연계된 워크플로우를 테스트하기 위한 수단(객체 간, 서비스 간, 시스템 간)&lt;/li&gt;
  &lt;li&gt;기능 테스트: 공개된 API의 가장 바깥쪽에 해당하는 코드 검사(Controller 호출, Security, http)&lt;/li&gt;
  &lt;li&gt;부하 테스트: 주어진 단위 시간 동안 애플리케이션이 얼마나 많은 요청을 처리할 수 있는지 검사&lt;/li&gt;
  &lt;li&gt;인수 테스트: 고객 또는 대리인이 정의되어진 모든 목적에 부합되는지 확인해보고 하는 검사&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;단위-테스트의-목적&quot;&gt;단위 테스트의 목적&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;문제점 신속히 발견&lt;/li&gt;
  &lt;li&gt;쉬운 변경&lt;/li&gt;
  &lt;li&gt;품질 향상&lt;/li&gt;
  &lt;li&gt;코드의 문제화(Sample Code)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;좋은-단위-테스트---first-법칙&quot;&gt;좋은 단위 테스트 - FIRST 법칙&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;F: Fast (빠르게)&lt;/li&gt;
  &lt;li&gt;I: Independent (독립적으로)&lt;/li&gt;
  &lt;li&gt;R: Repeatable (반복 가능하게)&lt;/li&gt;
  &lt;li&gt;S: Self-Validating (자가 검증하는)&lt;/li&gt;
  &lt;li&gt;T: Timely (적시에)&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Jinho Kim</name><email>haul0215@gmail.com</email></author><category term="[&quot;computer-science&quot;, &quot;wooahan-techcourse&quot;]" /><category term="computer-science" /><category term="wooahan-techcourse" /><summary type="html">TDD에 대해 알아보자</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/img/blog/tdd-main.png" /><media:content medium="image" url="http://localhost:4000/assets/img/blog/tdd-main.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Cache란 무엇인가</title><link href="http://localhost:4000/blog/update/computer-science/wooahan-techcourse/2021-10-31-Cache%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80/" rel="alternate" type="text/html" title="Cache란 무엇인가" /><published>2021-10-31T00:00:00+09:00</published><updated>2021-10-31T00:00:00+09:00</updated><id>http://localhost:4000/blog/update/computer-science/wooahan-techcourse/Cache%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80</id><content type="html" xml:base="http://localhost:4000/blog/update/computer-science/wooahan-techcourse/2021-10-31-Cache%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80/">&lt;p&gt;Cache에 대해 알아보자&lt;/p&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#사전-지식&quot; id=&quot;markdown-toc-사전-지식&quot;&gt;사전 지식&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#메모리-계층구조&quot; id=&quot;markdown-toc-메모리-계층구조&quot;&gt;메모리 계층구조&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#캐시의-작동-방식&quot; id=&quot;markdown-toc-캐시의-작동-방식&quot;&gt;캐시의 작동 방식&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#cpu의-캐시-메모리&quot; id=&quot;markdown-toc-cpu의-캐시-메모리&quot;&gt;CPU의 캐시 메모리&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#데이터베이스&quot; id=&quot;markdown-toc-데이터베이스&quot;&gt;데이터베이스&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#cdncontent-delivery-network&quot; id=&quot;markdown-toc-cdncontent-delivery-network&quot;&gt;CDN(Content Delivery Network)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#웹-캐시&quot; id=&quot;markdown-toc-웹-캐시&quot;&gt;웹 캐시&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#브라우저-캐시&quot; id=&quot;markdown-toc-브라우저-캐시&quot;&gt;브라우저 캐시&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#redis&quot; id=&quot;markdown-toc-redis&quot;&gt;Redis&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#ehcache&quot; id=&quot;markdown-toc-ehcache&quot;&gt;EHCache&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;사전-지식&quot;&gt;사전 지식&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;메모리 계층 구조
    &lt;ul&gt;
      &lt;li&gt;데이터 저장 공간 ➜ 속도와 용량은 반비례&lt;/li&gt;
      &lt;li&gt;속도가 빠를수록 용량이 작음&lt;/li&gt;
      &lt;li&gt;용량이 클수록 속도는 느림&lt;/li&gt;
      &lt;li&gt;속도와 용량 두마리 토끼를 다 잡기에는 비용이 많이듦&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;p&gt;속도와 용량에 따라 특성에 맞게 역할을 나눠 사용&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;메모리-계층구조&quot;&gt;메모리 계층구조&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/assets/img/blog/wooahan-cache-1.png&quot; alt=&quot;메모리 계층 구조&quot; class=&quot;border lead&quot; width=&quot;480&quot; height=&quot;480&quot; loading=&quot;lazy&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;파레토의 법칙 (일명 2대8의 법칙)
    &lt;ul&gt;
      &lt;li&gt;이탈리아 경제학자 빌프레도 파레토가 발견&lt;/li&gt;
      &lt;li&gt;원인 중 상위 20%가 전체 결과 80%를 좌우
        &lt;ul&gt;
          &lt;li&gt;ex) 잘 팔리는 제품 20%가 매출의 80%를 차지, 많이 쓰이는 단어 20%가 언어 사용 빈도의 80% 차지&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;p&gt;자주 쓰는 20%의 일을 가능한 몰아 넣으면 80%의 일을 효율적으로 처리할 수 있음&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
  &lt;li&gt;데이터 지역성의 원리
    &lt;ul&gt;
      &lt;li&gt;자주 쓰이는 데이터는 시간적 혹은 공간적으로 한 곳에 몰려있을 가능성이 높음&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;시간 지역성(Temporla Locality)&lt;/strong&gt;
        &lt;ul&gt;
          &lt;li&gt;ex) &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;for(int i = 0; i &amp;lt; N; i++)&lt;/code&gt;에서 i는 for문이 끝날 때까지 사용됨&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;공간 지역성(Spatial Locality)&lt;/strong&gt;
        &lt;ul&gt;
          &lt;li&gt;ex) for문에서 배열에 접근할 때 해당 배열이 위치한 메모리 주소 공간의 내용은 for문이 끝날 떄까지 사용&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;순차 지역성(Sequential Locality)&lt;/strong&gt;
        &lt;ul&gt;
          &lt;li&gt;ex) for문에서 배열에 접근할 때 arr[0], arr[1]… 다음에 arr[2]에 접근할 확률이 높음&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;캐시의-작동-방식&quot;&gt;캐시의 작동 방식&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;원본 데이터(System-of-Record)와는 별개로 자주 쓰이는 데이터(Hot Data)들을 복사해둘 캐시공간 마련
    &lt;ul&gt;
      &lt;li&gt;캐시 공간은 시간 복잡도 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;O(1)&lt;/code&gt;등 낮은 시간 복잡도로 접근 가능 ex) Java-Hash&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;데이터 요청이 들어오면 원본 데이터가 담긴 곳에 접근하기 전에 캐시 내부부터 탐색&lt;/li&gt;
  &lt;li&gt;캐시에 원하는 데이터가 없거나(Cache Miss) 너무 오래되어 최신성을 잃었으면(Expiration) 그 때 원본 데이터 공간에 접근하여 데이터를 가져오고 캐시에 해당 데이터를 복사 혹은 갱신&lt;/li&gt;
  &lt;li&gt;캐시에 원하는 데이터가 있으면 바로 데이터를 꺼내옴(Cache Hit)&lt;/li&gt;
  &lt;li&gt;캐시 공간은 작으므로, 공간이 부족하면 안쓰는 데이터부터 삭제 (Eviction) ex) LRU(Least Recently Used)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;cpu의-캐시-메모리&quot;&gt;CPU의 캐시 메모리&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;현재 CPU는 1초에 최고 수십억번 작동 가능&lt;/li&gt;
  &lt;li&gt;아무리 빠른 주기억장치도 CPU를 따라가기 어려움 ➜ SRAM을 CPU에 넣어 캐시 메모리로 사용&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;데이터베이스&quot;&gt;데이터베이스&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;데이터베이스는 쓰기보다 읽기가 많으므로 자주 요청받는 쿼리의 결과를 캐싱&lt;/li&gt;
  &lt;li&gt;데이터베이스 자체에서 별도의 캐시 운영 ➜ JPA의 영속성 컨텍스트 역시 캐시의 일종&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;cdncontent-delivery-network&quot;&gt;CDN(Content Delivery Network)&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;세계 각지에 캐시 서버를 두어 전송속도를 높이고 부하를 분산하는 시스템&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;웹-캐시&quot;&gt;웹 캐시&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;브라우저 캐시: HTML, JS, CSS 등을 하드디스크나 메모리에 캐싱&lt;/li&gt;
  &lt;li&gt;응답 캐시: 웹 서버의 경우 매번 내용이 같은 경우 서버에서 생성한 HTML을 캐싱&lt;/li&gt;
  &lt;li&gt;프록시 캐시: 웹 서버 앞단의 프록시 서버에서 캐싱&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;브라우저-캐시&quot;&gt;브라우저 캐시&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;웹 서버에서 클라이언트에 보내는 HTTP 헤더에 캐시 지시자 삽입 ➜ Client Web Browser에서는 명시된 캐시 정책에 따라 캐싱&lt;/li&gt;
  &lt;li&gt;캐시 유효 기간(max-age)이 지나도 캐시된 데이터가 바뀌지 않는 경우를 확인하기 위해 ETag라는 유효성 검사 토큰 사용&lt;/li&gt;
  &lt;li&gt;캐시 유효 시간을 길게 잡으면서 정적 파일 업데이트를 빠르게 하기 위해 파일 이름 뒤에 별도의 토큰이나 버전 번호 추가&lt;/li&gt;
  &lt;li&gt;캐시 정책은 웹 페이지 상황에 따라 다르게 적용&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;redis&quot;&gt;Redis&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;메모리 기반 오픈소스 NoSQL DBMS의 일종&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Remote Dictionary Server&lt;/strong&gt; : Java의 HashMap&amp;lt;Key, Value&amp;gt;&lt;/li&gt;
  &lt;li&gt;서버 재부팅 시 데이터가 사라지지 않게끔 데이터를 하드디스크에 기록 가능&lt;/li&gt;
  &lt;li&gt;DBMS의 일종이므로 명시적으로 삭제하지 않는 한 메모리에서 데이터를 삭제하지 않음&lt;/li&gt;
  &lt;li&gt;자체적으로 여러 자료형 지원&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;ehcache&quot;&gt;EHCache&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Java의 표준 캐싱 API 명세서인 JSR-107을 따르는 오픈소스 캐시 구현체&lt;/li&gt;
  &lt;li&gt;Spring 프레임워크나 Hibernate ORM등에서 바로 사용 가능&lt;/li&gt;
  &lt;li&gt;Java에서 가장 널리 사용&lt;/li&gt;
  &lt;li&gt;캐시 저장 공간을 속도에 따라 여러 등급으로 나누어 메모리 계층 구조 적용 가능&lt;/li&gt;
  &lt;li&gt;메모리 캐시 내용을 하드디스크에 기록 가능&lt;/li&gt;
  &lt;li&gt;대규모 서비스에서 캐시 서버 여럿을 클러스터로 묶을 수 있는 기능 제공&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Jinho Kim</name><email>haul0215@gmail.com</email></author><category term="[&quot;computer-science&quot;, &quot;wooahan-techcourse&quot;]" /><category term="computer-science" /><category term="wooahan-techcourse" /><summary type="html">Cache에 대해 알아보자</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/img/blog/cache-main.png" /><media:content medium="image" url="http://localhost:4000/assets/img/blog/cache-main.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry></feed>